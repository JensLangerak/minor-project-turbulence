/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
 default        cellLimited Gauss linear 0.5;// Gauss linear;//pointCellsLeastSquares fourth 0.5;//faceLimited Gauss linear 0.5;
    /*Gauss, cellLimited, cellMDLimited, edgeCellsLeastSquares,
    faceLimited, faceMDLimited, fourth, leastSquares, pointCellsLeastSquares*/
    //grad(U)         faceLimited Gauss linear 0.1;//faceLimited Gauss linear 0.33;
}

divSchemes
{
    default         Gauss upwind;
    div(phi,U)      Gauss upwind;
    //div(phi,k)      Gauss linearUpwind grad(U);
    //div(phi,omega)  Gauss linearUpwind grad(U);
    div((nuEff*dev2(T(grad(U))))) Gauss upwind;
    div(R) Gauss linear;
}

laplacianSchemes
{
    default           Gauss linear corrected;
  //default           Gauss linear limited;
    //laplacian(nuEff,U) Gauss linear corrected;
    //laplacian((1|A(U)),p) Gauss linear corrected;
    //laplacian(DkEff,k) Gauss linear corrected;
    //laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    //laplacian(DomegaEff,omega) Gauss linear corrected;
    //laplacian(DREff,R) Gauss linear corrected;
    //laplacian(DnuTildaEff,nuTilda) Gauss linear corrected;
}

interpolationSchemes
{
    default linear;
    //interpolate(phi) banana;
    //interpolate(U)  linear;
}

snGradSchemes
{
 default         limited 0.33;//corrected;//limited 0.33;//limited 0.5;//corrected;
}

fluxRequired
{
    default         no;
    p               ;
}

wallDist
{
	method meshWave;
}



// ************************************************************************* //
